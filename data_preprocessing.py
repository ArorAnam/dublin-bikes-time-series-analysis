# -*- coding: utf-8 -*-
"""data_preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HNtHHyWktS-JWbAi7dmpVIwUYZpExK9H

# Start data plotting
"""

import pandas as pd
import matplotlib.pyplot as plt

# Path to the CSV file
csv_file_path = '2018_Q4.csv'


try:

    df = pd.read_csv(csv_file_path, parse_dates=['TIME', 'LAST_UPDATED'])


    fig, ax1 = plt.subplots(figsize=(14, 7))

    color = 'tab:red'
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Available Bike Stands', color=color)
    ax1.plot(df['TIME'], df['AVAILABLE_BIKE_STANDS'], color=color, label='Available Bike Stands')
    ax1.tick_params(axis='y', labelcolor=color)

    ax2 = ax1.twinx()
    color = 'tab:blue'
    ax2.set_ylabel('Available Bikes', color=color)
    ax2.plot(df['TIME'], df['AVAILABLE_BIKES'], color=color, label='Available Bikes')
    ax2.tick_params(axis='y', labelcolor=color)

    fig.tight_layout()
    plt.title('Time Series of Available Bike Stands and Bikes')
    plt.show()


    plt.figure(figsize=(10, 5))
    plt.scatter(df['LONGITUDE'], df['LATITUDE'], c='green', label='Bike Station Locations')
    plt.title('Geospatial Scatter Plot of Bike Stations')
    plt.xlabel('Longitude')
    plt.ylabel('Latitude')
    plt.legend()
    plt.grid(True)
    plt.show()

except Exception as e:
    print(f"An error occurred: {e}")

"""## PER WEEK"""

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/pre_pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df.set_index('TIME', inplace=True)


weekly_avg_bikes = df['AVAILABLE BIKES'].resample('W').mean()

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(weekly_avg_bikes.index, weekly_avg_bikes, marker='o', linestyle='-')
plt.title('Average Available Bikes Per Week Over Time')
plt.xlabel('Week')
plt.ylabel('Average Available Bikes')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df.set_index('TIME', inplace=True)


weekly_avg_bikes = df['AVAILABLE BIKES'].resample('W').mean()

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(weekly_avg_bikes.index, weekly_avg_bikes, marker='o', linestyle='-')
plt.title('Average Available Bikes Per Week Over Time')
plt.xlabel('Week')
plt.ylabel('Average Available Bikes')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/post_pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df.set_index('TIME', inplace=True)


df.rename(columns={'AVAILABLE_BIKE_STANDS':'AVAILABLE BIKE STANDS',
                        'AVAILABLE_BIKES': 'AVAILABLE BIKES'}, inplace=True)


weekly_avg_bikes = df['AVAILABLE BIKES'].resample('W').mean()

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(weekly_avg_bikes.index, weekly_avg_bikes, marker='o', linestyle='-')
plt.title('Average Available Bikes Per Week Over Time')
plt.xlabel('Week')
plt.ylabel('Average Available Bikes')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""## TRY AGAIN WITH BIKE USAGE"""

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/pre_pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(df['TIME'], df['BIKE USAGE'], marker='o')
plt.title('Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Bike Usage')
plt.grid(True)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/pre_pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)


df.set_index('TIME', inplace=True)
daily_usage = df['BIKE USAGE'].resample('D').sum()

# Plotting
plt.figure(figsize=(15, 8))
plt.plot(daily_usage.index, daily_usage, marker='o', markersize=3)
plt.title('Daily Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Daily Bike Usage')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)


df.set_index('TIME', inplace=True)
daily_usage = df['BIKE USAGE'].resample('D').sum()

# Plotting
plt.figure(figsize=(15, 8))
plt.plot(daily_usage.index, daily_usage, marker='o', markersize=3)
plt.title('Daily Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Daily Bike Usage')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/post_pandemic.csv')


df.rename(columns={'AVAILABLE_BIKE_STANDS':'AVAILABLE BIKE STANDS',
                        'AVAILABLE_BIKES': 'AVAILABLE BIKES'}, inplace=True)

df['TIME']

df['TIME'] = pd.to_datetime(df['TIME'])


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)


df.set_index('TIME', inplace=True)
daily_usage = df['BIKE USAGE'].resample('D').sum()

# Plotting
plt.figure(figsize=(15, 8))
plt.plot(daily_usage.index, daily_usage, marker='o', markersize=3)
plt.title('Daily Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Daily Bike Usage')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df= pd.read_csv('data_files/pre_pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df.set_index('TIME', inplace=True)


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)


weekly_usage = df['BIKE USAGE'].resample('W').sum()


weekly_usage = weekly_usage.reset_index()

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(weekly_usage['TIME'], weekly_usage['BIKE USAGE'], marker='o')
plt.title('Weekly Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Bike Usage')
plt.grid(True)
plt.show()

df

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df.set_index('TIME', inplace=True)


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)


weekly_usage = df['BIKE USAGE'].resample('W').sum()


weekly_usage = weekly_usage.reset_index()

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(weekly_usage['TIME'], weekly_usage['BIKE USAGE'], marker='o')
plt.title('Weekly Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Bike Usage')
plt.grid(True)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv('data_files/post_pandemic.csv')


df['TIME'] = pd.to_datetime(df['TIME'])


df.set_index('TIME', inplace=True)


df.rename(columns={'AVAILABLE_BIKE_STANDS':'AVAILABLE BIKE STANDS',
                        'AVAILABLE_BIKES': 'AVAILABLE BIKES'}, inplace=True)


df['BIKE USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)


weekly_usage = df['BIKE USAGE'].resample('W').sum()


weekly_usage = weekly_usage.reset_index()

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(weekly_usage['TIME'], weekly_usage['BIKE USAGE'], marker='o')
plt.title('Weekly Bike Usage Over Time')
plt.xlabel('Time')
plt.ylabel('Bike Usage')
plt.grid(True)
plt.show()

"""READ FILES"""

df1 = pd.read_csv('data_files/pre_pandemic.csv')

df2 = pd.read_csv('data_files/pandemic.csv')

df3 = pd.read_csv('data_files/post_pandemic.csv')

df1.shape

df2.shape

df3.shape

"""## 3D Visualization"""

import pandas as pd
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


df = pd.read_csv("data_files/pandemic.csv")


df['TIME'] = pd.to_datetime(df['TIME'])


fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')


sc = ax.scatter(df['LATITUDE'], df['LONGITUDE'], df['AVAILABLE BIKES'], c=df['AVAILABLE BIKES'], cmap='viridis')


ax.set_xlabel('Latitude')
ax.set_ylabel('Longitude')
ax.set_zlabel('Available Bikes')


plt.colorbar(sc)


plt.savefig('3d_plot.jpeg', format='jpeg', dpi=300)


plt.show()

