# -*- coding: utf-8 -*-
"""RnadomForest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZASy150_9d3Pxbv7yh_84DTlUwiY-MkR
"""

import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

# Load data
# Change the location when running the code accoridingly
pre_pandemic = pd.read_csv('/content/drive/MyDrive/data_files/pre_pandemic.csv')
pandemic = pd.read_csv('/content/drive/MyDrive/data_files/pandemic.csv')
post_pandemic = pd.read_csv('/content/drive/MyDrive/data_files/post_pandemic.csv')


post_pandemic.rename(columns={'AVAILABLE_BIKE_STANDS':'AVAILABLE BIKE STANDS',
                              'AVAILABLE_BIKES': 'AVAILABLE BIKES',
                              'BIKE_STANDS': 'BIKE STANDS'
                             }, inplace=True)


def derive_usage(df):
    df['TIME'] = pd.to_datetime(df['TIME'])
    df.sort_values(['STATION ID', 'TIME'], inplace=True)
    df['BIKE_USAGE'] = df.groupby('STATION ID')['AVAILABLE BIKES'].diff().fillna(0)
    return df

pre_pandemic = derive_usage(pre_pandemic)
pandemic = derive_usage(pandemic)
post_pandemic = derive_usage(post_pandemic)


train_data = pd.concat([pre_pandemic, pandemic])


features = ['BIKE STANDS', 'AVAILABLE BIKE STANDS', 'LATITUDE', 'LONGITUDE', 'TIME']
target = 'BIKE_USAGE'


train_data['TIME'] = train_data['TIME'].astype(int)


X_train, X_test, y_train, y_test = train_test_split(train_data[features], train_data[target], test_size=0.2, random_state=42)


model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)


predictions = model.predict(X_test)


mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print(f"Model Performance (Pandemic Period): MSE = {mse}, R-squared = {r2}")


post_pandemic['TIME'] = post_pandemic['TIME'].astype(int)
X_post_pandemic = post_pandemic[features]
y_post_pandemic = post_pandemic[target]

post_pandemic_predictions = model.predict(X_post_pandemic)
post_pandemic_mse = mean_squared_error(y_post_pandemic, post_pandemic_predictions)
post_pandemic_r2 = r2_score(y_post_pandemic, post_pandemic_predictions)

print(f"Model Performance (Post-Pandemic Period): MSE = {post_pandemic_mse}, R-squared = {post_pandemic_r2}")

# from google.colab import drive
# drive.mount('/content/drive')

